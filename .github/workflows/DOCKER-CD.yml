name: DOCKER-CD
on:
  push:
    branches: [ "develop" ]

jobs:
  ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: .


    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: application.yml 생성
        run: |
          mkdir -p ./src/main/resources && cd $_
          touch ./application.yml
          echo "${{ secrets.CD_APPLICATION }}" > ./application.yml
          cat ./application.yml
          echo "Absolute path of application.yml:"
          echo "$(pwd)/application.yml"
        working-directory: ${{ env.working-directory }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: credentials.json 생성
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          aws s3 cp --region ap-northeast-2 s3://${{ secrets.S3_BUCKET_NAME }}/json/credentials.json .
          chmod a+r credentials.json
          echo "Absolute path of credentials.json:"
          echo "$(pwd)/credentials.json"
        shell: bash

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash


      - name: docker 로그인
        uses: docker/setup-buildx-action@v2.9.1

      - name: login docker hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        run: |
          docker build --platform linux/amd64 -t seonyakserver/seonyakdocker .
          docker push seonyakserver/seonyakdocker
        working-directory: ${{ env.working-directory }}

  cd:
    needs: ci
    runs-on: ubuntu-22.04

    steps:
      - name: docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd ~
            ./deploy.sh